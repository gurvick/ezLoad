[{"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\index.js":"1","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\App.js":"2","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\pages\\signin.js":"3","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\pages\\index.js":"4","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\ScrollToTop.js":"5","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\InfoSection\\Data.js":"6","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Signin\\index.js":"7","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\InfoSection\\index.js":"8","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\HeroSection\\index.js":"9","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Sidebar\\index.js":"10","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Navbar\\index.js":"11","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Services\\index.js":"12","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Footer\\index.js":"13","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Signin\\SigninElements.js":"14","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\InfoSection\\InfoElements.js":"15","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\ButtonElement.js":"16","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\HeroSection\\HeroElements.js":"17","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Sidebar\\SidebarElements.js":"18","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Services\\ServicesElements.js":"19","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Navbar\\NavbarElements.js":"20","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Footer\\FooterElements.js":"21","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\pages\\signup.js":"22","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Signup\\index.js":"23","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Signup\\SignupElements.js":"24","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\context\\UserContext.js":"25","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\misc\\ErrorNotice.js":"26","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\pages\\postings.js":"27","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\PostingNav\\index.js":"28","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\PostingNav\\PostingNavElements.js":"29","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\PostingSection\\index.js":"30","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\PostingSection\\PostingSectionElements.js":"31","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\PostingSidebar\\index.js":"32","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\PostingSidebar\\PostingSidebarElements.js":"33","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\pages\\createPost.js":"34","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\CreatePostPage\\index.js":"35","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\CreatePostPage\\CreatePostElements.js":"36","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\PostingHero\\index.js":"37","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\PostingHero\\HeroElements.js":"38"},{"size":199,"mtime":1608261467959,"results":"39","hashOfConfig":"40"},{"size":1693,"mtime":1610061931801,"results":"41","hashOfConfig":"40"},{"size":260,"mtime":1609742228918,"results":"42","hashOfConfig":"40"},{"size":876,"mtime":1610045714941,"results":"43","hashOfConfig":"40"},{"size":250,"mtime":1609784878456,"results":"44","hashOfConfig":"40"},{"size":1665,"mtime":1610162781188,"results":"45","hashOfConfig":"40"},{"size":2278,"mtime":1610177943388,"results":"46","hashOfConfig":"40"},{"size":1644,"mtime":1609742357571,"results":"47","hashOfConfig":"40"},{"size":2475,"mtime":1609998847707,"results":"48","hashOfConfig":"40"},{"size":1767,"mtime":1610154221791,"results":"49","hashOfConfig":"40"},{"size":3531,"mtime":1610162928228,"results":"50","hashOfConfig":"40"},{"size":1145,"mtime":1610162871044,"results":"51","hashOfConfig":"40"},{"size":1566,"mtime":1610096352478,"results":"52","hashOfConfig":"40"},{"size":2048,"mtime":1609787449018,"results":"53","hashOfConfig":"40"},{"size":2092,"mtime":1609722942048,"results":"54","hashOfConfig":"40"},{"size":709,"mtime":1609528159646,"results":"55","hashOfConfig":"40"},{"size":2033,"mtime":1609722947250,"results":"56","hashOfConfig":"40"},{"size":1938,"mtime":1609653614601,"results":"57","hashOfConfig":"40"},{"size":1647,"mtime":1609725100661,"results":"58","hashOfConfig":"40"},{"size":2368,"mtime":1609908922424,"results":"59","hashOfConfig":"40"},{"size":1262,"mtime":1609736805682,"results":"60","hashOfConfig":"40"},{"size":260,"mtime":1609787940423,"results":"61","hashOfConfig":"40"},{"size":3384,"mtime":1610177943389,"results":"62","hashOfConfig":"40"},{"size":1982,"mtime":1609787777661,"results":"63","hashOfConfig":"40"},{"size":77,"mtime":1609904353725,"results":"64","hashOfConfig":"40"},{"size":232,"mtime":1609982133216,"results":"65","hashOfConfig":"40"},{"size":1121,"mtime":1610154266322,"results":"66","hashOfConfig":"40"},{"size":3353,"mtime":1610158881895,"results":"67","hashOfConfig":"40"},{"size":2424,"mtime":1610159081269,"results":"68","hashOfConfig":"40"},{"size":3362,"mtime":1610177943386,"results":"69","hashOfConfig":"40"},{"size":2082,"mtime":1610161258601,"results":"70","hashOfConfig":"40"},{"size":1677,"mtime":1610062226335,"results":"71","hashOfConfig":"40"},{"size":1994,"mtime":1610154625645,"results":"72","hashOfConfig":"40"},{"size":793,"mtime":1610062661334,"results":"73","hashOfConfig":"40"},{"size":4961,"mtime":1610177943385,"results":"74","hashOfConfig":"40"},{"size":2073,"mtime":1610064360246,"results":"75","hashOfConfig":"40"},{"size":931,"mtime":1610159176331,"results":"76","hashOfConfig":"40"},{"size":1964,"mtime":1610159149494,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"t42p9g",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"80"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\index.js",[],["164","165"],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\App.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\pages\\signin.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\pages\\index.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\ScrollToTop.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\InfoSection\\Data.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Signin\\index.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\InfoSection\\index.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\HeroSection\\index.js",["166"],"import React, { useState, useContext } from 'react'\r\nimport Video from '../../video/video.mp4'\r\nimport { Button } from '../ButtonElement'\r\nimport UserContext from '../../context/UserContext'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  HeroContainer,\r\n  HeroBg,\r\n  VideoBg,\r\n  HeroContent,\r\n  HeroH1,\r\n  HeroP,\r\n  HeroBtnWrapper,\r\n  ArrowForward,\r\n  ArrowRight,\r\n} from './HeroElements'\r\n\r\nconst HeroSection = () => {\r\n  const [hover, setHover] = useState(false)\r\n  const onHover = () => {\r\n    setHover(!hover)\r\n  }\r\n  const { userData, setUserData } = useContext(UserContext)\r\n  const history = useHistory()\r\n  const postings = () => history.push('/postings')\r\n\r\n  return (\r\n    <>\r\n      <HeroContainer id='home'>\r\n        <HeroBg>\r\n          <VideoBg autoPlay loop muted src={Video} type='video/mp4' />\r\n        </HeroBg>\r\n        <HeroContent>\r\n          <HeroH1>Find Your Next Load</HeroH1>\r\n          {userData.user ? (\r\n            <>\r\n              <HeroP>Click View Postings to find a load near you</HeroP>\r\n              <HeroBtnWrapper>\r\n                <Button\r\n                  onClick={postings}\r\n                  onMouseEnter={onHover}\r\n                  onMouseLeave={onHover}\r\n                  primary='true'\r\n                  dark='true'\r\n                  smooth={true}\r\n                  duration={500}\r\n                  spy={true}\r\n                  exact='true'\r\n                  offset={-80}\r\n                >\r\n                  View Postings {hover ? <ArrowForward /> : <ArrowRight />}\r\n                </Button>\r\n              </HeroBtnWrapper>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <HeroP>\r\n                Sign up and join the easiest and fastest truck and load board\r\n                platform.\r\n              </HeroP>\r\n              <HeroBtnWrapper>\r\n                <Button\r\n                  to='signup'\r\n                  onMouseEnter={onHover}\r\n                  onMouseLeave={onHover}\r\n                  primary='true'\r\n                  dark='true'\r\n                  smooth={true}\r\n                  duration={500}\r\n                  spy={true}\r\n                  exact='true'\r\n                  offset={-80}\r\n                >\r\n                  Get started {hover ? <ArrowForward /> : <ArrowRight />}\r\n                </Button>\r\n              </HeroBtnWrapper>\r\n            </>\r\n          )}\r\n        </HeroContent>\r\n      </HeroContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HeroSection\r\n","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Sidebar\\index.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Navbar\\index.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Services\\index.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Footer\\index.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Signin\\SigninElements.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\InfoSection\\InfoElements.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\ButtonElement.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\HeroSection\\HeroElements.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Sidebar\\SidebarElements.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Services\\ServicesElements.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Navbar\\NavbarElements.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Footer\\FooterElements.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\pages\\signup.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Signup\\index.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\Signup\\SignupElements.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\context\\UserContext.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\misc\\ErrorNotice.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\pages\\postings.js",["167"],"import React, { useState, useContext } from 'react'\r\nimport PostingNavbar from '../components/PostingNav'\r\nimport PostingSection from '../components/PostingSection'\r\nimport UserContext from '../context/UserContext'\r\nimport { useHistory } from 'react-router-dom'\r\nimport PostingSidebar from '../components/PostingSidebar'\r\nimport PostingHeroSection from '../components/PostingHero'\r\n\r\nconst PostingsPage = () => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen)\r\n  }\r\n  const history = useHistory()\r\n  const backtohome = () => history.push('/')\r\n\r\n  const { userData, setUserData } = useContext(UserContext)\r\n  return (\r\n    <>\r\n      {userData.user ? (\r\n        <>\r\n          <PostingSidebar isOpen={isOpen} toggle={toggle} />\r\n          <PostingNavbar toggle={toggle} />\r\n          <PostingHeroSection />\r\n          <PostingSection />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h1>Error</h1>\r\n          <h2>No token detected</h2>\r\n          <button onClick={backtohome}>Back to home</button>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostingsPage\r\n","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\PostingNav\\index.js",["168","169"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { FaBars } from 'react-icons/fa'\r\nimport { IconContext } from 'react-icons/lib'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { animateScroll as scroll } from 'react-scroll'\r\nimport UserContext from '../../context/UserContext'\r\nimport {\r\n  PostingMobileIcon,\r\n  PostingNav,\r\n  PostingNavbarContainer,\r\n  PostingNavBtn,\r\n  PostingNavBtnLink,\r\n  PostingNavItem,\r\n  PostingNavLinks,\r\n  PostingNavLogo,\r\n  PostingNavMenu,\r\n} from './PostingNavElements'\r\n\r\nexport default function PostingNavbar({ toggle }) {\r\n  const [scrollNav, setScrollNav] = useState(false)\r\n\r\n  const changeNav = () => {\r\n    if (window.scrollY >= 80) {\r\n      setScrollNav(true)\r\n    } else {\r\n      setScrollNav(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', changeNav)\r\n  }, [])\r\n\r\n  const { userData, setUserData } = useContext(UserContext)\r\n  const history = useHistory()\r\n  const logout = () => {\r\n    setUserData({\r\n      token: undefined,\r\n      user: undefined,\r\n    })\r\n    localStorage.setItem('auth-token', '')\r\n    history.push('/')\r\n  }\r\n  const home = () => {\r\n    history.push('/')\r\n  }\r\n  const postings = () => {\r\n    history.push('/postings')\r\n  }\r\n  const createpost = () => {\r\n    history.push('/createpost')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: '#fff' }}>\r\n        <PostingNav>\r\n          <PostingNavbarContainer scrollNav={scrollNav}>\r\n            <PostingNavLogo to='/' onClick={home}>\r\n              <h1>ezLoad</h1>\r\n            </PostingNavLogo>\r\n            <PostingMobileIcon onClick={toggle}>\r\n              <FaBars />\r\n            </PostingMobileIcon>\r\n            <PostingNavMenu>\r\n              <PostingNavItem>\r\n                <PostingNavLinks\r\n                  onClick={home}\r\n                  smooth={true}\r\n                  duration={500}\r\n                  spy={true}\r\n                  exact='true'\r\n                  offset={-80}\r\n                >\r\n                  Home\r\n                </PostingNavLinks>\r\n              </PostingNavItem>\r\n              <PostingNavItem>\r\n                <PostingNavLinks\r\n                  onClick={postings}\r\n                  smooth={true}\r\n                  duration={500}\r\n                  spy={true}\r\n                  exact='true'\r\n                  offset={-80}\r\n                >\r\n                  Postings\r\n                </PostingNavLinks>\r\n              </PostingNavItem>\r\n              <PostingNavItem>\r\n                <PostingNavLinks\r\n                  to='services' // Add account settings page\r\n                  smooth={true}\r\n                  duration={500}\r\n                  spy={true}\r\n                  exact='true'\r\n                  offset={-80}\r\n                >\r\n                  Account Settings\r\n                </PostingNavLinks>\r\n              </PostingNavItem>\r\n            </PostingNavMenu>\r\n            <PostingNavBtn>\r\n              <PostingNavBtnLink onClick={createpost}>\r\n                Create Post\r\n              </PostingNavBtnLink>\r\n            </PostingNavBtn>\r\n            <PostingNavBtn>\r\n              <PostingNavBtnLink onClick={logout}>Log Out</PostingNavBtnLink>\r\n            </PostingNavBtn>\r\n          </PostingNavbarContainer>\r\n        </PostingNav>\r\n      </IconContext.Provider>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\PostingNav\\PostingNavElements.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\PostingSection\\index.js",["170","171","172","173","174"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport Video from '../../video/video.mp4'\r\nimport { Button } from '../ButtonElement'\r\nimport UserContext from '../../context/UserContext'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport axios from 'axios'\r\nimport {\r\n  PostingBtnWrap,\r\n  PostingColumn1,\r\n  PostingColumn2,\r\n  PostingHeading,\r\n  PostingInfoContainer,\r\n  PostingInfoRow,\r\n  PostingInfoWrapper,\r\n  PostingSubtitle,\r\n  PostingTextWrapper,\r\n  PostingTopLine,\r\n} from './PostingSectionElements'\r\n\r\nconst PostingSection = () => {\r\n  const [hover, setHover] = useState(false)\r\n  const [data, setData] = useState([])\r\n  const onHover = () => {\r\n    setHover(!hover)\r\n  }\r\n  const { userData, setUserData } = useContext(UserContext)\r\n  const history = useHistory()\r\n  const postings = () => history.push('/postings')\r\n\r\n  // const getPosts = async (e) => {\r\n  //   axios\r\n  //     .get('http://localhost:5000/posts/', {\r\n  //       headers: {\r\n  //         'x-auth-token': localStorage.getItem('auth-token'),\r\n  //       },\r\n  //     })\r\n  //     .then((response) => {\r\n  //       console.log(response)\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(error)\r\n  //     })\r\n  // }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:5000/posts/feed', {\r\n        headers: {\r\n          'x-auth-token': localStorage.getItem('auth-token'),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setData(response.data)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }, [])\r\n\r\n  return data.map((item) => {\r\n    return (\r\n      <PostingInfoContainer>\r\n        <PostingInfoWrapper>\r\n          <PostingInfoRow>\r\n            <PostingColumn1>\r\n              <PostingTextWrapper>\r\n                <PostingTopLine>Pickup Date: {item.pickup}</PostingTopLine>\r\n                <PostingHeading>\r\n                  {item.origin} ➡ {item.destination}\r\n                </PostingHeading>\r\n                <PostingSubtitle>\r\n                  Origin Address: {item.originAddress}\r\n                </PostingSubtitle>\r\n                <PostingSubtitle>\r\n                  Destination Address: {item.destinationAddress}\r\n                </PostingSubtitle>\r\n                <PostingSubtitle>Trip Length: {item.trip} mi</PostingSubtitle>\r\n                <PostingSubtitle>Load Length: {item.length} ft</PostingSubtitle>\r\n                <PostingSubtitle>Weight: {item.weight} lbs</PostingSubtitle>\r\n                <PostingSubtitle>Load Type: {item.type}</PostingSubtitle>\r\n                <PostingSubtitle>Price: {item.price}</PostingSubtitle>\r\n                <PostingSubtitle>\r\n                  Credit Score: {item.creditScore}\r\n                </PostingSubtitle>\r\n              </PostingTextWrapper>\r\n            </PostingColumn1>\r\n            <PostingColumn2>\r\n              <PostingBtnWrap>\r\n                <Button\r\n                  to='home'\r\n                  smooth={true}\r\n                  duration={500}\r\n                  spy={true}\r\n                  exact='true'\r\n                  offset={-80}\r\n                >\r\n                  Reserve\r\n                </Button>\r\n              </PostingBtnWrap>\r\n            </PostingColumn2>\r\n          </PostingInfoRow>\r\n        </PostingInfoWrapper>\r\n      </PostingInfoContainer>\r\n    )\r\n  })\r\n}\r\n\r\nexport default PostingSection\r\n","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\PostingSection\\PostingSectionElements.js",["175","176","177","178"],"import styled, { css } from 'styled-components'\r\nimport React from 'react'\r\nimport { MdKeyboardArrowRight, MdArrowForward } from 'react-icons/md'\r\n\r\nexport const PostingInfoContainer = styled.div`\r\n  color: #fff;\r\n  background: ${({ lightBg }) => (lightBg ? '#f9f9f9' : '#fff')};\r\n\r\n  @media screen and (max-width: 768px) {\r\n    padding: 100px 0;\r\n  }\r\n`\r\n\r\nexport const PostingInfoWrapper = styled.div`\r\n  display: grid;\r\n  z-index: 1;\r\n  height: 600px;\r\n  width: 100%;\r\n  max-width: 1100px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding: 0 24px;\r\n  justify-content: center;\r\n`\r\n\r\nexport const PostingInfoRow = styled.div`\r\n  display: grid;\r\n  grid-auto-columns: minmax(auto, 1fr);\r\n  align-items: center;\r\n  grid-template-areas: ${({ imgStart }) =>\r\n    imgStart ? `'col2 col1'` : `'col1 col2'`};\r\n\r\n  @media screen and (max-width: 768px) {\r\n    grid-template-areas: ${({ imgStart }) =>\r\n      imgStart ? `'col1' 'col2'` : `'col1 col1' 'col2 col2'`};\r\n  }\r\n`\r\n\r\nexport const PostingColumn1 = styled.div`\r\n  margin-bottom: 15px;\r\n  width: 500px;\r\n  grid-area: col1;\r\n`\r\n\r\nexport const PostingColumn2 = styled.div`\r\n  margin-bottom: 15px;\r\n  padding: 0 15px;\r\n  grid-area: col2;\r\n`\r\n\r\nexport const PostingTextWrapper = styled.div`\r\n  max-width: 540px;\r\n  padding-top: 0;\r\n  padding-bottom: 60px;\r\n`\r\n\r\nexport const PostingTopLine = styled.p`\r\n  color: #01bf71;\r\n  font-size: 16px;\r\n  line-height: 16px;\r\n  font-weight: 700;\r\n  letter-spacing: 1.4px;\r\n  text-transform: uppercase;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nexport const PostingHeading = styled.h1`\r\n  margin-bottom: 24px;\r\n  font-size: 48px;\r\n  line-height: 1.1;\r\n  font-weight: 600;\r\n  color: ${({ lightText }) => (lightText ? '#f7f8fa' : '#010606')};\r\n\r\n  @media screen and (max-width: 480px) {\r\n    font-size: 32px;\r\n  }\r\n`\r\n\r\nexport const PostingSubtitle = styled.p`\r\n  max-width: 440px;\r\n  margin-bottom: 10px;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  color: ${({ darkText }) => (darkText ? '#fff' : '#010606')};\r\n`\r\n\r\nexport const PostingBtnWrap = styled.div`\r\n  display: flex;\r\n  justify-content: right;\r\n`\r\n","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\PostingSidebar\\index.js",["179"],"import React, { useContext } from 'react'\r\nimport UserContext from '../../context/UserContext'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  PostSidebarContainer,\r\n  PostIcon,\r\n  PostCloseIcon,\r\n  PostSidebarWrapper,\r\n  PostSidebarMenu,\r\n  PostSidebarLink,\r\n  PostSideBtnWrap,\r\n  PostSidebarRoute,\r\n} from './PostingSidebarElements'\r\n\r\nconst PostingSidebar = ({ isOpen, toggle }) => {\r\n  const { userData, setUserData } = useContext(UserContext)\r\n  const history = useHistory()\r\n  const logout = () => {\r\n    setUserData({\r\n      token: undefined,\r\n      user: undefined,\r\n    })\r\n    localStorage.setItem('auth-token', '')\r\n    history.push('/')\r\n  }\r\n\r\n  const home = () => {\r\n    history.push('/')\r\n  }\r\n\r\n  const postings = () => {\r\n    history.push('/postings')\r\n  }\r\n  const createpost = () => {\r\n    history.push('/createpost')\r\n  }\r\n\r\n  return (\r\n    <PostSidebarContainer isOpen={isOpen} onClick={toggle}>\r\n      <PostIcon onClick={toggle}>\r\n        <PostCloseIcon />\r\n      </PostIcon>\r\n      <PostSidebarWrapper>\r\n        <PostSidebarMenu>\r\n          <PostSidebarLink onClick={home}>Home</PostSidebarLink>\r\n          <PostSidebarLink onClick={postings}>Postings</PostSidebarLink>\r\n          <PostSidebarLink onClick={toggle}>Account Settings</PostSidebarLink>\r\n        </PostSidebarMenu>\r\n        <PostSideBtnWrap>\r\n          <PostSidebarRoute onClick={createpost}>Create Post</PostSidebarRoute>\r\n        </PostSideBtnWrap>\r\n        <PostSideBtnWrap>\r\n          <PostSidebarRoute onClick={logout}>Log Out</PostSidebarRoute>\r\n        </PostSideBtnWrap>\r\n      </PostSidebarWrapper>\r\n    </PostSidebarContainer>\r\n  )\r\n}\r\n\r\nexport default PostingSidebar\r\n","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\PostingSidebar\\PostingSidebarElements.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\pages\\createPost.js",["180","181","182"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport UserContext from '../context/UserContext'\r\nimport CreatePostPage from '../components/CreatePostPage'\r\n\r\nconst CreatePost = () => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen)\r\n  }\r\n  const history = useHistory()\r\n  const backtohome = () => history.push('/')\r\n\r\n  const { userData, setUserData } = useContext(UserContext)\r\n  return (\r\n    <>\r\n      {userData.user ? (\r\n        <CreatePostPage />\r\n      ) : (\r\n        <div>\r\n          <h1>Error</h1>\r\n          <h2>No token detected</h2>\r\n          <button onClick={backtohome}>Back to home</button>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreatePost\r\n","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\CreatePostPage\\index.js",["183","184"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Axios from 'axios'\r\nimport {\r\n  CPContainer,\r\n  CPFormWrap,\r\n  CPIcon,\r\n  CPFormContent,\r\n  CPForm,\r\n  CPFormH1,\r\n  CPFormLabel,\r\n  CPFormInput,\r\n  CPFormButton,\r\n  CPText,\r\n} from './CreatePostElements'\r\n\r\nexport default function CreatePostPage() {\r\n  const [pickup, setPickup] = useState()\r\n  const [origin, setOrigin] = useState()\r\n  const [originAddress, setOriginAddress] = useState()\r\n  const [destination, setDestination] = useState()\r\n  const [destinationAddress, setDestinationAddress] = useState()\r\n  const [trip, setTrip] = useState()\r\n  const [length, setLength] = useState()\r\n  const [weight, setWeight] = useState()\r\n  const [type, setType] = useState()\r\n  const [price, setPrice] = useState()\r\n  const [creditScore, setCreditScore] = useState()\r\n\r\n  const history = useHistory()\r\n  const addPost = async (e) => {\r\n    e.preventDefault()\r\n    console.log('posted')\r\n    Axios.post(\r\n      'http://localhost:5000/posts/',\r\n      {\r\n        pickup: pickup,\r\n        origin: origin,\r\n        originAddress: originAddress,\r\n        destination: destination,\r\n        destinationAddress: destinationAddress,\r\n        trip: trip,\r\n        length: length,\r\n        weight: weight,\r\n        type: type,\r\n        price: price,\r\n        creditScore: creditScore,\r\n      },\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-auth-token': localStorage.getItem('auth-token'),\r\n        },\r\n      }\r\n    )\r\n      .then((data) => {\r\n        if (data.error) {\r\n          console.log('error')\r\n        } else {\r\n          history.push('/postings')\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CPContainer>\r\n        <CPFormWrap>\r\n          <CPIcon to='/postings'>ezLoad</CPIcon>\r\n          <CPFormContent>\r\n            <CPForm type='submit' onSubmit={addPost}>\r\n              <CPFormH1>Create Post</CPFormH1>\r\n              <CPFormLabel htmlFor='for'>Pickup Date</CPFormLabel>\r\n              <CPFormInput\r\n                type='date'\r\n                onChange={(e) => setPickup(e.target.value)}\r\n                required\r\n              />\r\n              <CPFormLabel htmlFor='for'>\r\n                Origin City, State/Province\r\n              </CPFormLabel>\r\n              <CPFormInput\r\n                type='text'\r\n                onChange={(e) => setOrigin(e.target.value)}\r\n                required\r\n              />\r\n              <CPFormLabel htmlFor='for'>Origin Address</CPFormLabel>\r\n              <CPFormInput\r\n                type='text'\r\n                onChange={(e) => setOriginAddress(e.target.value)}\r\n                required\r\n              />\r\n              <CPFormLabel htmlFor='for'>\r\n                Destination City, State/Province\r\n              </CPFormLabel>\r\n              <CPFormInput\r\n                type='text'\r\n                onChange={(e) => setDestination(e.target.value)}\r\n                required\r\n              />\r\n              <CPFormLabel htmlFor='for'>Destination Address</CPFormLabel>\r\n              <CPFormInput\r\n                type='text'\r\n                onChange={(e) => setDestinationAddress(e.target.value)}\r\n                required\r\n              />\r\n              <CPFormLabel htmlFor='for'>Trip Length (mi)</CPFormLabel>\r\n              <CPFormInput\r\n                type='number'\r\n                onChange={(e) => setTrip(e.target.value)}\r\n                required\r\n              />\r\n              <CPFormLabel htmlFor='for'>Load length (ft)</CPFormLabel>\r\n              <CPFormInput\r\n                type='number'\r\n                onChange={(e) => setLength(e.target.value)}\r\n                required\r\n              />\r\n              <CPFormLabel htmlFor='for'>Weight (lbs)</CPFormLabel>\r\n              <CPFormInput\r\n                type='number'\r\n                onChange={(e) => setWeight(e.target.value)}\r\n                required\r\n              />\r\n              <CPFormLabel htmlFor='for'>Load Type</CPFormLabel>\r\n              <CPFormInput\r\n                type='text'\r\n                onChange={(e) => setType(e.target.value)}\r\n                required\r\n              />\r\n              <CPFormLabel htmlFor='for'>Price</CPFormLabel>\r\n              <CPFormInput\r\n                type='text'\r\n                onChange={(e) => setPrice(e.target.value)}\r\n                required\r\n              />\r\n              <CPFormLabel htmlFor='for'>Credit Score</CPFormLabel>\r\n              <CPFormInput\r\n                type='text'\r\n                onChange={(e) => setCreditScore(e.target.value)}\r\n                required\r\n              />\r\n              <CPFormButton type='submit'>Create Post</CPFormButton>\r\n              <CPText to='/postings'>Back to Postings</CPText>\r\n            </CPForm>\r\n          </CPFormContent>\r\n        </CPFormWrap>\r\n      </CPContainer>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\CreatePostPage\\CreatePostElements.js",[],"C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\PostingHero\\index.js",["185","186","187","188","189","190","191","192"],"import React, { useState, useContext } from 'react'\r\nimport { Button } from '../ButtonElement'\r\nimport UserContext from '../../context/UserContext'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  PostingHeroContainer,\r\n  PostingHeroBg,\r\n  PostingHeroContent,\r\n  PostingHeroH1,\r\n  PostingHeroP,\r\n  PostingHeroBtnWrapper,\r\n  PostingArrowForward,\r\n  PostingArrowRight,\r\n} from './HeroElements'\r\n\r\nconst PostingHeroSection = () => {\r\n  const [hover, setHover] = useState(false)\r\n  const onHover = () => {\r\n    setHover(!hover)\r\n  }\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <>\r\n      <PostingHeroContainer>\r\n        <PostingHeroBg></PostingHeroBg>\r\n        <PostingHeroContent>\r\n          <PostingHeroH1>Find Your Next Load</PostingHeroH1>\r\n          <PostingHeroP>View Posts Below</PostingHeroP>\r\n        </PostingHeroContent>\r\n      </PostingHeroContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostingHeroSection\r\n","C:\\Users\\gghai\\Desktop\\ezLoad\\src\\components\\PostingHero\\HeroElements.js",[],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":23,"column":21,"nodeType":"199","messageId":"200","endLine":23,"endColumn":32},{"ruleId":"197","severity":1,"message":"198","line":17,"column":21,"nodeType":"199","messageId":"200","endLine":17,"endColumn":32},{"ruleId":"197","severity":1,"message":"201","line":5,"column":27,"nodeType":"199","messageId":"200","endLine":5,"endColumn":33},{"ruleId":"197","severity":1,"message":"202","line":34,"column":11,"nodeType":"199","messageId":"200","endLine":34,"endColumn":19},{"ruleId":"197","severity":1,"message":"203","line":2,"column":8,"nodeType":"199","messageId":"200","endLine":2,"endColumn":13},{"ruleId":"197","severity":1,"message":"204","line":24,"column":9,"nodeType":"199","messageId":"200","endLine":24,"endColumn":16},{"ruleId":"197","severity":1,"message":"202","line":27,"column":11,"nodeType":"199","messageId":"200","endLine":27,"endColumn":19},{"ruleId":"197","severity":1,"message":"198","line":27,"column":21,"nodeType":"199","messageId":"200","endLine":27,"endColumn":32},{"ruleId":"197","severity":1,"message":"205","line":29,"column":9,"nodeType":"199","messageId":"200","endLine":29,"endColumn":17},{"ruleId":"197","severity":1,"message":"206","line":1,"column":18,"nodeType":"199","messageId":"200","endLine":1,"endColumn":21},{"ruleId":"197","severity":1,"message":"207","line":2,"column":8,"nodeType":"199","messageId":"200","endLine":2,"endColumn":13},{"ruleId":"197","severity":1,"message":"208","line":3,"column":10,"nodeType":"199","messageId":"200","endLine":3,"endColumn":30},{"ruleId":"197","severity":1,"message":"209","line":3,"column":32,"nodeType":"199","messageId":"200","endLine":3,"endColumn":46},{"ruleId":"197","severity":1,"message":"202","line":16,"column":11,"nodeType":"199","messageId":"200","endLine":16,"endColumn":19},{"ruleId":"197","severity":1,"message":"210","line":1,"column":27,"nodeType":"199","messageId":"200","endLine":1,"endColumn":36},{"ruleId":"197","severity":1,"message":"211","line":8,"column":9,"nodeType":"199","messageId":"200","endLine":8,"endColumn":15},{"ruleId":"197","severity":1,"message":"198","line":14,"column":21,"nodeType":"199","messageId":"200","endLine":14,"endColumn":32},{"ruleId":"197","severity":1,"message":"212","line":1,"column":27,"nodeType":"199","messageId":"200","endLine":1,"endColumn":37},{"ruleId":"197","severity":1,"message":"210","line":1,"column":39,"nodeType":"199","messageId":"200","endLine":1,"endColumn":48},{"ruleId":"197","severity":1,"message":"212","line":1,"column":27,"nodeType":"199","messageId":"200","endLine":1,"endColumn":37},{"ruleId":"197","severity":1,"message":"213","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":16},{"ruleId":"197","severity":1,"message":"214","line":3,"column":8,"nodeType":"199","messageId":"200","endLine":3,"endColumn":19},{"ruleId":"197","severity":1,"message":"215","line":11,"column":3,"nodeType":"199","messageId":"200","endLine":11,"endColumn":24},{"ruleId":"197","severity":1,"message":"216","line":12,"column":3,"nodeType":"199","messageId":"200","endLine":12,"endColumn":22},{"ruleId":"197","severity":1,"message":"217","line":13,"column":3,"nodeType":"199","messageId":"200","endLine":13,"endColumn":20},{"ruleId":"197","severity":1,"message":"204","line":18,"column":9,"nodeType":"199","messageId":"200","endLine":18,"endColumn":16},{"ruleId":"197","severity":1,"message":"218","line":21,"column":9,"nodeType":"199","messageId":"200","endLine":21,"endColumn":16},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'setUserData' is assigned a value but never used.","Identifier","unusedVar","'scroll' is defined but never used.","'userData' is assigned a value but never used.","'Video' is defined but never used.","'onHover' is assigned a value but never used.","'postings' is assigned a value but never used.","'css' is defined but never used.","'React' is defined but never used.","'MdKeyboardArrowRight' is defined but never used.","'MdArrowForward' is defined but never used.","'useEffect' is defined but never used.","'toggle' is assigned a value but never used.","'useContext' is defined but never used.","'Button' is defined but never used.","'UserContext' is defined but never used.","'PostingHeroBtnWrapper' is defined but never used.","'PostingArrowForward' is defined but never used.","'PostingArrowRight' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]